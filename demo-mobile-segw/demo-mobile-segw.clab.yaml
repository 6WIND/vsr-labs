name: 6wind-mobile-segw

topology:
  defaults:
    kind: 6wind_vsr
  kinds:
    6wind_vsr:
      cpu: 2
      memory: 2GB
      image: download.6wind.com/vsr/x86_64-ce/3.10:latest
      license: license
      startup-config: __clabNodeName__.conf
  nodes:
    pki:
      kind: linux
      cpu: 2
      cpu-set: 0-1
      memory: 2GB
      image: keyfactor/ejbca-ce
      ports:
        - 8080:8080
        - 8443:8443
      env:
        TLS_SETUP_ENABLED: "simple" 
      binds:
        - pki:/root/certs:ro
      exec:
        - sleep 120 # Wait for EJBCA to be ready
        # Root CA is generated by the gNodeB container in order for loadtester to generate certificates for simulated nodeB signed by this Root CA, import it in EJBCA
        - ejbca.sh ca importca 6WIND_CA /root/certs/6WIND_CA.p12 -kspassword 'foo123'
        - ejbca.sh ra addendentity --username segw-north-a1 --dn "CN=segw-north-a1,O=6WIND,C=FR" --caname 6WIND_CA --type 1 --token USERGENERATED --password password --altname dNSName=segw.6wind.com 
        - ejbca.sh ra setclearpwd --username segw-north-a1 --password segw
        - ejbca.sh ra addendentity --username segw-north-a2 --dn "CN=segw-north-a2,O=6WIND,C=FR" --caname 6WIND_CA --type 1 --token USERGENERATED --password password --altname dNSName=segw.6wind.com 
        - ejbca.sh ra setclearpwd --username segw-north-a2 --password segw
        - ejbca.sh ra addendentity --username segw-north-b1 --dn "CN=segw-north-b1,O=6WIND,C=FR" --caname 6WIND_CA --type 1 --token USERGENERATED --password password --altname dNSName=segw.6wind.com 
        - ejbca.sh ra setclearpwd --username segw-north-b1 --password segw
        - ejbca.sh config cmp addalias client
        - ejbca.sh config cmp updatealias client authenticationmodule HMAC
        - ejbca.sh config cmp updatealias client authenticationparameters " "
    monitoring:
      kind: linux
      cpu: 2
      cpu-set: 0-1
      memory: 4GB
      image: docker:dind
      ports:
        - 3000:3000
      exec:
        - apk add --no-cache bash python3 py3-yaml py3-requests
        - git clone https://github.com/6WIND/supervision-grafana.git
        - bash -c "(cd supervision-grafana && ./start tools/confs/vsr-3.10.yaml)"
    trex:
      kind: linux
      cpu: 4
      cpu-set: 0-4
      memory: 4GB
      image: ubuntu:22.04
      binds:
        - trex/trex_cfg.yaml:/etc/trex_cfg.yaml:ro
        - trex/traffic.py:/root/traffic.py:ro
      exec:
        - apt-get -qq update
        - apt-get -qq -y install --no-install-recommends iproute2 iputils-ping net-tools netbase pciutils python3 python3-distutils strace wget tmux
        - wget --no-check-certificate https://trex-tgn.cisco.com/trex/release/v3.05.tar.gz
        - tar -zxf v3.05.tar.gz -C /tmp/
        - bash -c 'tmux new-session -d -n server -s trex "cd /tmp/v3.05 && ./t-rex-64 -i"'
    gNodeB-north:
      cpu-set: 5-6
      binds:
        - gNodeB/scripts:/root/scripts:ro
        - pki:/etc/certificates/load-tester/:rw
        - /home/ubuntu/.ssh:/root/pubkey:ro
      exec:
        - mkdir -p /root/.ssh
        - bash -c "for keyfile in `ls /root/pubkey/*.pub`; do cat $keyfile >> /root/.ssh/authorized_keys; done"
        - chmod 600 /root/.ssh/authorized_keys
        - bash /root/scripts/generate_certificates.sh
    pe-north-access1:
      cpu-set: 7-8
    p-north:
      cpu-set: 9-10
    pe-north-core1:
      cpu-set: 11-12
    segw-clustergw-north-1:
      cpu-set: 13-14
    segw-clustergw-north-2:
      cpu-set: 15-16
    segw-north-a1:
      cpu-set: 17-18
      labels:
        ansible-group: automation
      binds:
        - /home/ubuntu/.ssh:/root/pubkey:ro
      exec:
        - mkdir -p /root/.ssh
        - bash -c "for keyfile in `ls /root/pubkey/*.pub`; do cat $keyfile >> /root/.ssh/authorized_keys; done"
        - chmod 600 /root/.ssh/authorized_keys
    segw-north-a2:
      cpu-set: 19-20
      labels:
        ansible-group: automation
      binds:
        - /home/ubuntu/.ssh:/root/pubkey:ro
      exec:
        - mkdir -p /root/.ssh
        - bash -c "for keyfile in `ls /root/pubkey/*.pub`; do cat $keyfile >> /root/.ssh/authorized_keys; done"
        - chmod 600 /root/.ssh/authorized_keys
    segw-north-b1:
      cpu-set: 21-22
      labels:
        ansible-group: automation
      binds:
        - /home/ubuntu/.ssh:/root/pubkey:ro
      exec:
        - mkdir -p /root/.ssh
        - bash -c "for keyfile in `ls /root/pubkey/*.pub`; do cat $keyfile >> /root/.ssh/authorized_keys; done"
        - chmod 600 /root/.ssh/authorized_keys
  links:
    - endpoints: ["trex:eth1", "gNodeB-north:eth1"]
    - endpoints: ["trex:eth2", "pe-north-core1:eth4"]
    - endpoints: ["gNodeB-north:eth2", "pe-north-access1:eth1"]
    - endpoints: ["pe-north-access1:eth2", "p-north:eth1"]
    - endpoints: ["p-north:eth2", "pe-north-core1:eth1"]
    - endpoints: ["pe-north-core1:eth2", "segw-clustergw-north-1:eth1"]
    - endpoints: ["pe-north-core1:eth3", "segw-clustergw-north-2:eth1"]
    - endpoints: ["segw-clustergw-north-1:eth2", "segw-north-a1:eth1"]
    - endpoints: ["segw-clustergw-north-1:eth3", "segw-north-a1:eth2"]
    - endpoints: ["segw-clustergw-north-2:eth2", "segw-north-a1:eth3"]
    - endpoints: ["segw-clustergw-north-2:eth3", "segw-north-a1:eth4"]
    - endpoints: ["segw-clustergw-north-1:eth4", "segw-north-a2:eth1"]
    - endpoints: ["segw-clustergw-north-1:eth5", "segw-north-a2:eth2"]
    - endpoints: ["segw-clustergw-north-2:eth4", "segw-north-a2:eth3"]
    - endpoints: ["segw-clustergw-north-2:eth5", "segw-north-a2:eth4"]
    - endpoints: ["segw-clustergw-north-1:eth6", "segw-north-b1:eth1"]
    - endpoints: ["segw-clustergw-north-1:eth7", "segw-north-b1:eth2"]
    - endpoints: ["segw-clustergw-north-2:eth6", "segw-north-b1:eth3"]
    - endpoints: ["segw-clustergw-north-2:eth7", "segw-north-b1:eth4"]
